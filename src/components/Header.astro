---
import { cn } from '../lib/utils';
import Logo from './Logo.astro';
import Button from './Button.astro';
import { Icon } from 'astro-icon/components';

const currentPath = Astro.url.pathname;

const navItems = [
  { href: '/quem-somos', label: 'Quem somos' },
  { href: '/eventos', label: 'Eventos e Meetups' },
  { href: '/devs', label: 'Devs' },
  { href: '/como-participar', label: 'Como participar' },
  { href: '/contato', label: 'Contato' },
  { href: '/blog', label: 'Blog' }
];
---

<header class="fixed top-0 left-0 right-0 z-50 bg-neutral-900/90 backdrop-blur-md border-b border-neutral-800">
  <div class="container mx-auto lg:px-8">
    <div class="flex items-center justify-between h-16">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="block no-underline">
          <Logo as="div" class="text-xl" />
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center space-x-8">
        {navItems.map(item => (
          <a 
            href={item.href}
            class={cn(
              'no-underline font-azeret text-sm font-medium transition-colors hover:text-secondary',
              currentPath === item.href ? 'text-secondary' : 'text-white'
            )}
          >
            {item.label}
          </a>
        ))}
      </nav>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button 
          id="mobile-menu-button"
          class="border-none shadow-none p-2 rounded-md text-white hover:text-secondary bg-transparent focus:outline-none focus:ring-2 focus:ring-inset focus:ring-secondary focus:ring-offset-0 focus:ring-offset-transparent"
          aria-expanded="false"
        >
          <Icon name="menu" class="h-6 w-6 text-white" />
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div id="mobile-menu" class="hidden md:hidden">
    <div class="px-2 pt-2 pb-3 space-y-1 bg-neutral-900/95 backdrop-blur-md border-t border-neutral-800">
      {navItems.map(item => (
        <a 
          href={item.href}
          class={cn(
            'no-underline block px-3 py-2 rounded-md font-azeret text-base font-medium transition-colors',
            currentPath === item.href 
              ? 'text-secondary bg-neutral-800' 
              : 'text-white hover:text-secondary hover:bg-neutral-800'
          )}
        >
          {item.label}
        </a>
      ))}
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIcon = document.getElementById('menu-icon');
  const closeIcon = document.getElementById('close-icon');

  let isMenuOpen = false;

  function toggleMenu() {
    isMenuOpen = !isMenuOpen;
    
    if (isMenuOpen) {
      mobileMenu?.classList.remove('hidden');
      menuIcon?.classList.add('hidden');
      closeIcon?.classList.remove('hidden');
      mobileMenuButton?.setAttribute('aria-expanded', 'true');
    } else {
      mobileMenu?.classList.add('hidden');
      menuIcon?.classList.remove('hidden');
      closeIcon?.classList.add('hidden');
      mobileMenuButton?.setAttribute('aria-expanded', 'false');
    }
  }

  mobileMenuButton?.addEventListener('click', toggleMenu);

  // Close menu when clicking outside
  document.addEventListener('click', (event) => {
    const target = event.target as Element;
    if (isMenuOpen && !mobileMenuButton?.contains(target) && !mobileMenu?.contains(target)) {
      toggleMenu();
    }
  });

  // Close menu on escape key
  document.addEventListener('keydown', (event) => {
    if (event.key === 'Escape' && isMenuOpen) {
      toggleMenu();
    }
  });
</script>